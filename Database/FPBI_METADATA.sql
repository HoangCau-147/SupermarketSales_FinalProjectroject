--CREATE DATABASE FPBI_METADATA
GO

USE FPBI_METADATA
GO

-- Check exists table
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[AUDIT_METADATA]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
  DROP TABLE [dbo].[AUDIT_METADATA]
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[ETL_METADATA_STAGE]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
  DROP TABLE [dbo].[ETL_METADATA_STAGE]
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[ETL_METADATA_NDS]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
  DROP TABLE [dbo].[ETL_METADATA_NDS]
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[ETL_METADATA_DDS]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
  DROP TABLE [dbo].[ETL_METADATA_DDS]
GO

-- Table ETL_METADATA_STAGE
CREATE TABLE [dbo].[ETL_METADATA_STAGE] (
  [ID] int IDENTITY(1, 1) NOT NULL,
  [TableName] NVARCHAR(100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
  [LSET] DATETIME NULL,
  [CET] DATETIME NULL,
  [Status] NVARCHAR(100) NULL,
  [RecordCount] INT NULL,
)
ON [PRIMARY]
GO

-- Table ETL_METADATA
CREATE TABLE [dbo].[ETL_METADATA_NDS] (
  [ID] int IDENTITY(1, 1) NOT NULL,
  [TableName] NVARCHAR(100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
  [LSET] DATETIME NULL,
  [CET] DATETIME NULL,
  [Status] NVARCHAR(100) NULL,
  [RecordCount] INT NULL,
  [RecordInsert] INT NULL,
  [RecordUpdate] INT NULL
)
ON [PRIMARY]
GO

-- Table ETL_METADATA_DDS
CREATE TABLE [dbo].[ETL_METADATA_DDS] (
  [ID] int IDENTITY(1, 1) NOT NULL,
  [TableName] NVARCHAR(100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
  [LSET] DATETIME NULL,
  [CET] DATETIME NULL,
  [Status] NVARCHAR(100) NULL,
  [RecordCount] INT NULL,
  [RecordInsert] INT NULL,
  [RecordUpdate] INT NULL
)
ON [PRIMARY]
GO

--Table AUDIT_METADATA
CREATE TABLE [dbo].[AUDIT_METADATA] (
  [ID] int IDENTITY(1, 1) NOT NULL,
  [ETL_ID] INT NOT NULL,
  [TableName] NVARCHAR(100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
  [LSET] DATETIME NULL,
  [CET] DATETIME NULL,
  [Status] NVARCHAR(100) NULL,
  [RecordCount] INT NULL,
  [RecordInsert] INT NULL,
  [RecordUpdate] INT NULL,
  [Status_OLD] NVARCHAR(100) NULL,
  [RecordCount_OLD] INT NULL,
  [RecordInsert_OLD] INT NULL,
  [RecordUpdate_OLD] INT NULL,
  [LSET_OLD] DATETIME NULL,
  [CET_OLD] DATETIME NULL,
  [Source] NVARCHAR(100)
)
ON [PRIMARY]
GO

-- Definition for indices : 
ALTER TABLE [dbo].[ETL_METADATA_STAGE]
ADD CONSTRAINT [PK_ETL_METADATA_STAGE] 
PRIMARY KEY CLUSTERED ([ID])
WITH (
  PAD_INDEX = OFF,
  IGNORE_DUP_KEY = OFF,
  STATISTICS_NORECOMPUTE = OFF,
  ALLOW_ROW_LOCKS = ON,
  ALLOW_PAGE_LOCKS = ON)
ON [PRIMARY]
GO

ALTER TABLE [dbo].[ETL_METADATA_NDS]
ADD CONSTRAINT [PK_ETL_METADATA_NDS] 
PRIMARY KEY CLUSTERED ([ID])
WITH (
  PAD_INDEX = OFF,
  IGNORE_DUP_KEY = OFF,
  STATISTICS_NORECOMPUTE = OFF,
  ALLOW_ROW_LOCKS = ON,
  ALLOW_PAGE_LOCKS = ON)
ON [PRIMARY]
GO

ALTER TABLE [dbo].[ETL_METADATA_DDS]
ADD CONSTRAINT [PK_ETL_METADATA_DDS] 
PRIMARY KEY CLUSTERED ([ID])
WITH (
  PAD_INDEX = OFF,
  IGNORE_DUP_KEY = OFF,
  STATISTICS_NORECOMPUTE = OFF,
  ALLOW_ROW_LOCKS = ON,
  ALLOW_PAGE_LOCKS = ON)
ON [PRIMARY]
GO

ALTER TABLE [dbo].[AUDIT_METADATA]
ADD CONSTRAINT [PK_AUDIT_METADATA] 
PRIMARY KEY CLUSTERED ([ID])
WITH (
  PAD_INDEX = OFF,
  IGNORE_DUP_KEY = OFF,
  STATISTICS_NORECOMPUTE = OFF,
  ALLOW_ROW_LOCKS = ON,
  ALLOW_PAGE_LOCKS = ON)
ON [PRIMARY]
GO

-- CREATE TRIGGER
CREATE TRIGGER INSERT_ETL_METADATA_STAGE ON [dbo].[ETL_METADATA_STAGE] AFTER INSERT
AS 
BEGIN
	UPDATE [dbo].[ETL_METADATA_STAGE]
	SET LSET = GETDATE(), CET = GETDATE()
	WHERE ID IN (SELECT DISTINCT ID FROM inserted)
END
GO

CREATE TRIGGER INSERT_ETL_METADATA_NDS ON [dbo].[ETL_METADATA_NDS] AFTER INSERT
AS 
BEGIN
	UPDATE [dbo].[ETL_METADATA_NDS]
	SET LSET = GETDATE(), CET = GETDATE()
	WHERE ID IN (SELECT DISTINCT ID FROM inserted)
END
GO

CREATE TRIGGER INSERT_ETL_METADATA_DDS ON [dbo].[ETL_METADATA_DDS] AFTER INSERT
AS 
BEGIN
	UPDATE [dbo].[ETL_METADATA_DDS]
	SET LSET = GETDATE(), CET = GETDATE()
	WHERE ID IN (SELECT DISTINCT ID FROM inserted)
END
GO

GO
SET IDENTITY_INSERT [dbo].[ETL_METADATA_STAGE] ON
GO
-- INSERT ETL_METADATA_STAGE
INSERT INTO ETL_METADATA_STAGE(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (1, 'CITY_STAGE', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_STAGE(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (2, 'PRODUCTLINE_STAGE', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_STAGE(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (3, 'SUPERMARKET_SALE_STAGE', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_STAGE(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (4, 'PRODUCT_STAGE', NULL, NULL, NULL, NULL)
GO
SET IDENTITY_INSERT [dbo].[ETL_METADATA_STAGE] OFF
GO
SET IDENTITY_INSERT [dbo].[ETL_METADATA_NDS] ON
GO
-- INSERT ETL_METADATA_NDS
INSERT INTO ETL_METADATA_NDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (1, 'CITY_NDS', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_NDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (2, 'CUSTOMER_TYPE_NDS', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_NDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (3, 'GENDER_NDS', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_NDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (4, 'INVOICE_NDS', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_NDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (5, 'PAYMENT_NDS', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_NDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (6, 'PRODUCT_NDS', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_NDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (7, 'PRODUCTLINE_NDS', NULL, NULL, NULL, NULL)
GO
SET IDENTITY_INSERT [dbo].[ETL_METADATA_NDS] OFF
GO
SET IDENTITY_INSERT [dbo].[ETL_METADATA_DDS] ON
GO
-- INSERT ETL_METADATA_DDS
--Insert below here
INSERT INTO ETL_METADATA_DDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (1, 'DIM_PAYMENT', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_DDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (2, 'DIM_PRODUCT', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_DDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (3, 'DIM_GENDER', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_DDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (4, 'DIM_CUSTOMERTYPE', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_DDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (5, 'DIM_CITY', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_DDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (6, 'DIM_TIME', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_DDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (7, 'DIM_DAY', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_DDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (8, 'DIM_MONTH', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_DDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (9, 'DIM_YEAR', NULL, NULL, NULL, NULL)

INSERT INTO ETL_METADATA_DDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (10, 'DIM_PRODUCTLINE', NULL, NULL, NULL, NULL)
INSERT INTO ETL_METADATA_DDS(ID, TableName, LSET, CET, Status, RecordCount)
	VALUES (11, 'FACT', NULL, NULL, NULL, NULL)

GO
SET IDENTITY_INSERT [dbo].[ETL_METADATA_DDS] OFF
GO

-- AUDIT
-- Trigger cho ETl_METADATA_STAGE
CREATE TRIGGER trg_ETl_METADATA_STAGE_Audit
ON ETl_METADATA_STAGE
AFTER UPDATE
AS
BEGIN
  SET NOCOUNT ON;

  INSERT INTO AUDIT_METADATA (ETL_ID, TableName, LSET, CET, Status, RecordCount,Status_OLD, RecordCount_OLD, LSET_OLD, CET_OLD, Source)
  SELECT
    E.ID,
    E.TableName,
    E.LSET,
    E.CET,
    E.Status,
    E.RecordCount,
	D.Status,
	D.RecordCount,
    D.LSET,
    D.CET,
    'ETL_METADATA_STAGE'
  FROM inserted E
  INNER JOIN deleted D ON E.ID = D.ID;
END;
GO

-- Trigger cho ETl_METADATA_NDS
CREATE TRIGGER trg_ETl_METADATA_NDS_Audit
ON ETl_METADATA_NDS
AFTER UPDATE
AS
BEGIN
  SET NOCOUNT ON;
 
  INSERT INTO AUDIT_METADATA (ETL_ID, TableName, LSET, CET, Status, RecordCount, RecordInsert, RecordUpdate, Status_OLD, RecordCount_OLD, RecordInsert_OLD, RecordUpdate_OLD, LSET_OLD, CET_OLD, Source)
  SELECT
    E.ID,
     E.TableName,
    E.LSET,
    E.CET,
    E.Status,
    E.RecordCount,
	E.RecordInsert,
	E.RecordUpdate,
	D.Status,
	D.RecordCount,
	D.RecordInsert,
	D.RecordUpdate,
    D.LSET,
    D.CET,
    'ETL_METADATA_NDS'
  FROM inserted E
  INNER JOIN deleted D ON E.ID = D.ID;
END;
GO

-- Trigger cho ETl_METADATA_DDS
CREATE TRIGGER trg_ETl_METADATA_DDS_Audit
ON ETl_METADATA_DDS
AFTER UPDATE
AS
BEGIN
  SET NOCOUNT ON;

  INSERT INTO AUDIT_METADATA (ETL_ID, TableName, LSET, CET, Status, RecordCount, RecordInsert, RecordUpdate, Status_OLD, RecordCount_OLD, RecordInsert_OLD, RecordUpdate_OLD, LSET_OLD, CET_OLD, Source)
  SELECT
    E.ID,
     E.TableName,
    E.LSET,
    E.CET,
    E.Status,
    E.RecordCount,
	E.RecordInsert,
	E.RecordUpdate,
	D.Status,
	D.RecordCount,
	D.RecordInsert,
	D.RecordUpdate,
    D.LSET,
    D.CET,
    'ETL_METADATA_DDS'
  FROM inserted E
  INNER JOIN deleted D ON E.ID = D.ID;
END;
GO

TRUNCATE TABLE	 ETL_METADATA_NDS
TRUNCATE TABLE	 ETL_METADATA_DDS
TRUNCATE TABLE	 ETL_METADATA_STAGE
TRUNCATE TABLE	 AUDIT_METADATA

